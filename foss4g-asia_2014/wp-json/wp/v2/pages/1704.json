{"id":1704,"date":"2014-10-02T10:18:49","date_gmt":"2014-10-02T03:18:49","guid":{"rendered":"https:\/\/foss4g.asia\/2014\/?page_id=1704"},"modified":"2014-10-10T12:44:10","modified_gmt":"2014-10-10T05:44:10","slug":"abstract-30","status":"publish","type":"page","link":"https:\/\/foss4g.asia\/2014\/abstracts\/abstract-30\/","title":{"rendered":"(30) Status report of the goGPS Project"},"content":{"rendered":"<p>Topic:\u00a0Status report of the goGPS Project<\/p>\n<p>Presenter:\u00a0Daisuke Yoshida<\/p>\n<p><span style=\"color: #575757;\">Type:\u00a0<\/span><span style=\"color: #575757;\">Oral<\/span><\/p>\n<p><strong>Introduction\u00a0<\/strong><br \/>\ngoGPS is a free and open source positioning software package that processes single-frequency observations in either absolute or relative mode. It can use both code and phase observations by geodetic or low-cost receivers. goGPS can compute single-epoch solutions by weighted least squares adjustment, or applying a Kalman filter on either positions or observations, also by exploiting a dynamic model [1]. Moreover, goGPS supports EGNOS ionospheric, pseudorange and satellite position\/clock corrections (also by exploiting the EGNOS Message Server &#8211; EMS) for absolute positioning, the resolution of integer ambiguities by LAMBDA method in single-frequency relative positioning, and multi-constellation support including GLONASS, Galileo, BeiDou and QZSS [2].<br \/>\nThere are two versions of goGPS, which are the MATLAB and Java versions. goGPS was originally written in MATLAB and, generally, new functions and enhancements have been implemented and tested in the MATLAB version first. goGPS Java development was started in order to allow a wider user base to develop and use it, as well as to provide higher processing speed [3].<br \/>\nIn this presentation, we show the current status of the two versions of goGPS and some future developments.<\/p>\n<p><strong>Low cost Single-frequency receivers<\/strong><br \/>\ngoGPS MATLAB can decode observations from receivers based on the following low-cost modules (Currently the goGPS Java supports u-box and NVS receivers):<br \/>\n&#8211; u-blox LEA-4T\/5T\/6T<br \/>\n&#8211; SkyTraq S1315F-RAW<br \/>\n&#8211; Fastrax IT03<br \/>\n&#8211; NVS NV08C-CSM (support for the multi-constellation low-cost receiver using a demo firmware that provides support for GPS, GLONASS, Galileo and QZSS).<\/p>\n<p><strong>Multi-constellation support<\/strong><br \/>\nGNSS constellations will significantly increase the number of visible satellites at any given epoch. goGPS MATLAB can process code and phase observations of all the currently available GNSS constellations (excluding IRNSS). Supporting for the multi-constellation in goGPS Java is currently underway.<\/p>\n<p><strong>goGPS Java-based u-blox raw data logging application<\/strong><br \/>\nA u-blox raw data logger application was recently developed in goGPS Java, with the following features:<br \/>\n&#8211; multiple receivers logging (from COM ports)<br \/>\n&#8211; both raw data (UBX binary protocol) and NMEA logging<br \/>\n&#8211; on-the-fly UBX decoding and RINEX file writing<br \/>\n&#8211; GPS time and system (PC) time synchronization<\/p>\n<p>To give an application example, this logger was developed within a project involving the precise positioning and attitude determination by means of three u-blox receivers of an autogyro (an aircraft similar to a small helicopter), which was carrying several remote sensing instruments (among which a natural radiation sensor and cameras for aerial photogrammetry) which required precise time synchronization.<\/p>\n<p><strong>Future developments<\/strong><br \/>\ngoGPS Web services have been tested in Grid and Cloud infrastructures in order to handle a large number of access or deal with a large volume of datasets and confirmed the performances with benchmarks [4]. Recently, the development of the goGPS Java is being pushed forward to catch up the goGPS MATLAB version. The newly developed functions in the goGPS Java are planning to implement as Web services with user-friendly Web interfaces. Moreover, the Web developments will not only provide goGPS positioning services but also WebAPIs to provide possibilities to apply them for other developments such as Android.<\/p>\n<p><strong>Acknowledgments<\/strong><br \/>\nThe authors acknowledge the positioning services JENOBA (Japan) for their support in VRS.\u00a0This research was supported by the JSPS Grant-in-Aid for Scientific Research (Issue No. 24700105 and No. 26730156).<\/p>\n<p><strong>References<\/strong><br \/>\n[1] Realini, E., &amp; Reguzzoni, M. (2013). goGPS: open source software for enhancing the accuracy of low-cost receivers by single-frequency relative kinematic positioning. Measurement Science and Technology, 24(11), 115010.<br \/>\n[2] Herrera M. A., Suhandri F. H., Realini E., Clara de Lacy M., Reguzzoni M., 2013, Latest developments in goGPS open source positioning software: EGNOS corrections, integer ambiguity resolution by LAMBDA method and multi-constellation support, International Association of Geodesy (IAG) Scientific Assembly 2013, September 1-6, Potsdam, Germany.<br \/>\n[3] Realini E., Yoshida D., Patocchi L., Reguzzoni M., Raghavan V., 2010, Porting goGPS from MATLAB to Java: performance analysis, tests and results. Proceedings of FOSS4G 2010, Barcelona, Spain, 6-9 September 2010.<br \/>\n[4] Yoshida D., Realini E., Fenoy G., Raghavan V., 2012, Implementing Grid Enabled Web Services for Enhanced Positioning using Low-cost GPS Devices, International Journal of Geoinformatics, Vol.8, No.1, pp.41-51.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Topic:\u00a0Status report of the goGPS Project Presenter:\u00a0Daisuke Yoshida Type:\u00a0Oral Introduction\u00a0 goGPS is a free and&#8230;<\/p>\n","protected":false},"author":3,"featured_media":0,"parent":1621,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"template-full-width.php","meta":[],"_links":{"self":[{"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/pages\/1704"}],"collection":[{"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/comments?post=1704"}],"version-history":[{"count":5,"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/pages\/1704\/revisions"}],"predecessor-version":[{"id":1947,"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/pages\/1704\/revisions\/1947"}],"up":[{"embeddable":true,"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/pages\/1621"}],"wp:attachment":[{"href":"https:\/\/foss4g.asia\/2014\/wp-json\/wp\/v2\/media?parent=1704"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}