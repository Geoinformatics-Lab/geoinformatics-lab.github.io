{"id":5527,"date":"2024-11-14T04:09:46","date_gmt":"2024-11-14T04:09:46","guid":{"rendered":"https:\/\/foss4g.asia\/2024\/?page_id=5527"},"modified":"2024-11-15T06:49:06","modified_gmt":"2024-11-15T06:49:06","slug":"schedule-query","status":"publish","type":"page","link":"https:\/\/foss4g.asia\/2024\/schedule-query\/","title":{"rendered":"SCHEDULE SEARCH"},"content":{"rendered":"\t\t<div data-elementor-type=\"wp-page\" data-elementor-id=\"5527\" class=\"elementor elementor-5527\">\n\t\t\t\t<div class=\"elementor-element elementor-element-c436ef9 e-grid e-con-boxed e-con e-parent\" data-id=\"c436ef9\" data-element_type=\"container\" data-settings=\"{&quot;grandconference_ext_is_background_parallax&quot;:&quot;false&quot;,&quot;grandconference_ext_is_background_backdrop&quot;:&quot;false&quot;,&quot;grandconference_ext_is_background_on_scroll&quot;:&quot;false&quot;,&quot;grandconference_ext_link_sidemenu&quot;:&quot;false&quot;,&quot;grandconference_ext_link_fullmenu&quot;:&quot;false&quot;,&quot;grandconference_ext_link_closed_fullmenu&quot;:&quot;false&quot;,&quot;grandconference_ext_is_sticky&quot;:&quot;false&quot;,&quot;grandconference_ext_is_scrollme&quot;:&quot;false&quot;,&quot;grandconference_ext_is_smoove&quot;:&quot;false&quot;,&quot;grandconference_ext_is_parallax_mouse&quot;:&quot;false&quot;,&quot;grandconference_ext_is_infinite&quot;:&quot;false&quot;,&quot;grandconference_ext_is_fadeout_animation&quot;:&quot;false&quot;,&quot;grandconference_ext_mobile_static&quot;:&quot;false&quot;}\">\n\t\t\t\t\t<div class=\"e-con-inner\">\n\t\t\t\t<div class=\"elementor-element elementor-element-65f3b27 elementor-widget__width-inherit elementor-widget elementor-widget-html\" data-id=\"65f3b27\" data-element_type=\"widget\" data-settings=\"{&quot;grandconference_ext_link_sidemenu&quot;:&quot;false&quot;,&quot;grandconference_ext_link_fullmenu&quot;:&quot;false&quot;,&quot;grandconference_ext_link_closed_fullmenu&quot;:&quot;false&quot;,&quot;grandconference_ext_is_sticky&quot;:&quot;false&quot;,&quot;grandconference_ext_is_scrollme&quot;:&quot;false&quot;,&quot;grandconference_ext_is_smoove&quot;:&quot;false&quot;,&quot;grandconference_ext_is_parallax_mouse&quot;:&quot;false&quot;,&quot;grandconference_ext_is_infinite&quot;:&quot;false&quot;,&quot;grandconference_ext_is_fadeout_animation&quot;:&quot;false&quot;,&quot;grandconference_ext_mobile_static&quot;:&quot;false&quot;}\" data-widget_type=\"html.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>FOSS4G-Asia 2024 Schedule<\/title>\r\n    <style>\r\n        body {\r\n            font-family: Arial, sans-serif;\r\n            margin: 20px;\r\n            background-color: #f9f9f9;\r\n        }\r\n        header {\r\n            text-align: center;\r\n            margin-bottom: 20px;\r\n        }\r\n        #searchContainer {\r\n            text-align: center;\r\n            margin-bottom: 20px;\r\n        }\r\n        #searchInput {\r\n            width: 50%;\r\n            padding: 10px;\r\n            font-size: 16px;\r\n            border: 1px solid #ccc;\r\n            border-radius: 5px;\r\n        }\r\n        #filterContainer {\r\n            display: flex;\r\n            justify-content: center;\r\n            gap: 10px;\r\n            margin-bottom: 20px;\r\n        }\r\n        select {\r\n            padding: 10px;\r\n            font-size: 16px;\r\n            border: 1px solid #ccc;\r\n            border-radius: 5px;\r\n            width: 200px; \/* Set a consistent width *\/\r\n        }\r\n        table {\r\n            width: 100%;\r\n            border-collapse: collapse;\r\n            margin-bottom: 20px;\r\n            background: #fff;\r\n        }\r\n        table th, table td {\r\n            padding: 10px;\r\n            text-align: left;\r\n            border: 1px solid #ddd;\r\n        }\r\n        table th.date-column, table td.date-column {\r\n            white-space: nowrap;\r\n        }\r\n        table th {\r\n            background-color: #f4f4f4;\r\n        }\r\n        table tr.workshop {\r\n            background-color: #d4f7d4; \/* Light green *\/\r\n        }\r\n        table tr.keynote {\r\n            background-color: #ccecff; \/* Green-blue tone *\/\r\n        }\r\n        table tr.general {\r\n            background-color: #ffecd6; \/* Light orange *\/\r\n        }\r\n        table tr.academic {\r\n            background-color: #d9e2ff; \/* Soft blue *\/\r\n        }\r\n        table tr:hover {\r\n            background-color: #f1f1f1;\r\n        }\r\n    <\/style>\r\n<\/head>\r\n<body>\r\n    <header>\r\n        <h1>FOSS4G-Asia 2024 Schedule<\/h1>\r\n    <\/header>\r\n\r\n    <div id=\"searchContainer\">\r\n        <input type=\"text\" id=\"searchInput\" placeholder=\"Search topics, authors, or rooms...\" onkeyup=\"applyFilters()\">\r\n    <\/div>\r\n\r\n    <div id=\"filterContainer\">\r\n        <select id=\"dateFilter\" onchange=\"updateFilter('date', this.value)\">\r\n            <option value=\"\">All Dates<\/option>\r\n        <\/select>\r\n        <select id=\"categoryFilter\" onchange=\"updateFilter('category', this.value)\">\r\n            <option value=\"\">All Categories<\/option>\r\n        <\/select>\r\n        <select id=\"roomFilter\" onchange=\"updateFilter('room', this.value)\">\r\n            <option value=\"\">All Rooms<\/option>\r\n        <\/select>\r\n    <\/div>\r\n\r\n    <div id=\"tablesContainer\">\r\n        <!-- Dynamic table will be rendered here -->\r\n    <\/div>\r\n\r\n    <script>\r\n        const icalUrl = 'https:\/\/talks.geoinfo-lab.org\/foss4g-asia-2024\/schedule\/export\/schedule.xcal';\r\n        let filters = {\r\n            date: '',\r\n            category: '',\r\n            room: '',\r\n            search: ''\r\n        };\r\n\r\n        async function fetchSchedule() {\r\n            try {\r\n                const response = await fetch(icalUrl);\r\n                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\r\n                const icalData = await response.text();\r\n                parseICalData(icalData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching iCal data:\", error);\r\n            }\r\n        }\r\n\r\n        function parseICalData(data) {\r\n            const parser = new DOMParser();\r\n            const xmlDoc = parser.parseFromString(data, \"text\/xml\");\r\n\r\n            const events = [];\r\n            const eventNodes = xmlDoc.getElementsByTagName(\"vevent\");\r\n\r\n            for (let i = 0; i < eventNodes.length; i++) {\r\n                const eventNode = eventNodes[i];\r\n                const rawStart = eventNode.getElementsByTagName(\"dtstart\")[0]?.textContent || \"\";\r\n                const rawEnd = eventNode.getElementsByTagName(\"dtend\")[0]?.textContent || \"\";\r\n                const start = formatTime(rawStart);\r\n                const end = formatTime(rawEnd);\r\n                const date = formatDate(rawStart);\r\n                const title = eventNode.getElementsByTagName(\"pentabarf:title\")[0]?.textContent || \"No title\";\r\n                const category = eventNode.getElementsByTagName(\"category\")[0]?.textContent || \"No category\";\r\n                const location = eventNode.getElementsByTagName(\"location\")[0]?.textContent || \"No location\";\r\n                const authors = Array.from(eventNode.getElementsByTagName(\"attendee\"))\r\n                    .map(attendee => attendee.textContent)\r\n                    .join(\", \") || \"No authors\";\r\n\r\n                events.push({\r\n                    date,\r\n                    start,\r\n                    end,\r\n                    summary: title,\r\n                    category,\r\n                    location,\r\n                    authors,\r\n                });\r\n            }\r\n\r\n            window.events = events; \/\/ Store events globally for filtering\r\n            populateTable(events);\r\n            populateDropdowns(events); \/\/ Populate dropdowns once with all options\r\n        }\r\n\r\n        function formatDate(rawDate) {\r\n            if (!rawDate) return \"Unknown date\";\r\n            const year = rawDate.substring(0, 4);\r\n            const month = rawDate.substring(4, 6);\r\n            const day = rawDate.substring(6, 8);\r\n            const date = new Date(`${year}-${month}-${day}`);\r\n            const options = { day: '2-digit', month: 'short', year: 'numeric' };\r\n            return date.toLocaleDateString(undefined, options);\r\n        }\r\n\r\n        function formatTime(rawDate) {\r\n            if (!rawDate) return \"Unknown time\";\r\n            const hours = rawDate.substring(9, 11);\r\n            const minutes = rawDate.substring(11, 13);\r\n            return `${hours}:${minutes}`;\r\n        }\r\n\r\n        function populateTable(events) {\r\n            const tablesContainer = document.getElementById('tablesContainer');\r\n            tablesContainer.innerHTML = ''; \/\/ Clear previous table\r\n            const table = document.createElement('table');\r\n            table.innerHTML = `\r\n                <thead>\r\n                    <tr>\r\n                        <th class=\"date-column\">Date<\/th>\r\n                        <th>Start<\/th>\r\n                        <th>End<\/th>\r\n                        <th>Topic<\/th>\r\n                        <th>Category<\/th>\r\n                        <th>Room<\/th>\r\n                        <th>Authors<\/th>\r\n                    <\/tr>\r\n                <\/thead>\r\n                <tbody>\r\n                    ${events\r\n                        .map(event => {\r\n                            const rowClass = getRowClass(event.category);\r\n                            return `\r\n                                <tr class=\"${rowClass}\">\r\n                                    <td class=\"date-column\">${event.date}<\/td>\r\n                                    <td>${event.start}<\/td>\r\n                                    <td>${event.end}<\/td>\r\n                                    <td>${event.summary}<\/td>\r\n                                    <td>${event.category}<\/td>\r\n                                    <td>${event.location}<\/td>\r\n                                    <td>${event.authors}<\/td>\r\n                                <\/tr>\r\n                            `;\r\n                        })\r\n                        .join('')}\r\n                <\/tbody>\r\n            `;\r\n            tablesContainer.appendChild(table);\r\n        }\r\n\r\n        function getRowClass(category) {\r\n            const normalizedCategory = category.trim().toLowerCase();\r\n\r\n            if (normalizedCategory.includes(\"workshop\")) {\r\n                return \"workshop\";\r\n            } else if (normalizedCategory.includes(\"keynote\")) {\r\n                return \"keynote\";\r\n            } else if (normalizedCategory.includes(\"general track\")) {\r\n                return \"general\";\r\n            } else if (normalizedCategory.includes(\"academic track\")) {\r\n                return \"academic\";\r\n            }\r\n            return \"\"; \/\/ Default case for no specific category\r\n        }\r\n\r\n        function populateDropdowns(events) {\r\n            const dateDropdown = document.getElementById(\"dateFilter\");\r\n            const categoryDropdown = document.getElementById(\"categoryFilter\");\r\n            const roomDropdown = document.getElementById(\"roomFilter\");\r\n\r\n            \/\/ Populate Date Filter\r\n            const dates = [...new Set(events.map(event => event.date))];\r\n            dateDropdown.innerHTML = `<option value=\"\">All Dates<\/option>` + dates.map(date => `<option value=\"${date}\">${date}<\/option>`).join('');\r\n\r\n            \/\/ Populate Category Filter\r\n            const categories = [...new Set(events.map(event => event.category))];\r\n            categoryDropdown.innerHTML = `<option value=\"\">All Categories<\/option>` + categories.map(category => `<option value=\"${category}\">${category}<\/option>`).join('');\r\n\r\n            \/\/ Populate Room Filter\r\n            const rooms = [...new Set(events.map(event => event.location))];\r\n            roomDropdown.innerHTML = `<option value=\"\">All Rooms<\/option>` + rooms.map(room => `<option value=\"${room}\">${room}<\/option>`).join('');\r\n        }\r\n\r\n        function applyFilters() {\r\n            const filteredEvents = window.events.filter(event => {\r\n                const matchesDate = !filters.date || event.date === filters.date;\r\n                const matchesCategory = !filters.category || event.category === filters.category;\r\n                const matchesRoom = !filters.room || event.location === filters.room;\r\n                const matchesSearch = !filters.search || `${event.date} ${event.start} ${event.end} ${event.summary} ${event.category} ${event.location} ${event.authors}`.toLowerCase().includes(filters.search);\r\n\r\n                return matchesDate && matchesCategory && matchesRoom && matchesSearch;\r\n            });\r\n\r\n            populateTable(filteredEvents);\r\n        }\r\n\r\n        function updateFilter(key, value) {\r\n            filters[key] = value;\r\n            applyFilters();\r\n        }\r\n\r\n        document.getElementById('searchInput').addEventListener('input', () => {\r\n            filters.search = document.getElementById('searchInput').value.toLowerCase();\r\n            applyFilters();\r\n        });\r\n\r\n        fetchSchedule();\r\n    <\/script>\r\n<\/body>\r\n<\/html>\r\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t","protected":false},"excerpt":{"rendered":"<p>FOSS4G-Asia 2024 Schedule FOSS4G-Asia 2024 Schedule All Dates All Categories All Rooms<\/p>\n","protected":false},"author":2,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"elementor_theme","meta":{"_monsterinsights_skip_tracking":false,"_monsterinsights_sitenote_active":false,"_monsterinsights_sitenote_note":"","_monsterinsights_sitenote_category":0,"_price":"","_stock":"","_tribe_ticket_header":"","_tribe_default_ticket_provider":"","_tribe_ticket_capacity":"0","_ticket_start_date":"","_ticket_end_date":"","_tribe_ticket_show_description":"","_tribe_ticket_show_not_going":false,"_tribe_ticket_use_global_stock":"","_tribe_ticket_global_stock_level":"","_global_stock_mode":"","_global_stock_cap":"","_tribe_rsvp_for_event":"","_tribe_ticket_going_count":"","_tribe_ticket_not_going_count":"","_tribe_tickets_list":"[]","_tribe_ticket_has_attendee_info_fields":false,"footnotes":"","_tec_slr_enabled":"","_tec_slr_layout":""},"class_list":["post-5527","page","type-page","status-publish","hentry"],"ticketed":false,"_links":{"self":[{"href":"https:\/\/foss4g.asia\/2024\/wp-json\/wp\/v2\/pages\/5527"}],"collection":[{"href":"https:\/\/foss4g.asia\/2024\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/foss4g.asia\/2024\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/foss4g.asia\/2024\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/foss4g.asia\/2024\/wp-json\/wp\/v2\/comments?post=5527"}],"version-history":[{"count":33,"href":"https:\/\/foss4g.asia\/2024\/wp-json\/wp\/v2\/pages\/5527\/revisions"}],"predecessor-version":[{"id":5613,"href":"https:\/\/foss4g.asia\/2024\/wp-json\/wp\/v2\/pages\/5527\/revisions\/5613"}],"wp:attachment":[{"href":"https:\/\/foss4g.asia\/2024\/wp-json\/wp\/v2\/media?parent=5527"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}